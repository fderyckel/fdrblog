---
title: "Kmeans with regime changes"
author: "Francois de Ryckel"
date: "2022-10-12"
categories: [kmeans, code, analysis, tidymodel]
editor: source
---

Idea is to use Kmeans to classify various market regimes. 

```{r}
#| label: setting_up
#| warning: false
#| message: false

library(readr)
library(glue)
library(dplyr)
the_path <- here::here()
df <- read_csv(glue(the_path, "/raw_data/intc.csv"))
glimpse(df)
```



# Using python 
Original blog post 

```{python}
#| label: get_and_save_the_data
#| eval: false

import yfinance as yf     #only to download data
data  = yf.download("INTC")
data.to_csv("../../raw_data/intc.csv")
```


```{python}
#| label: load_and_transform_data

import pandas as pd

py_df = pd.read_csv("../../raw_data/intc.csv", names = ['date', 'open', 'high', 'low', 'close', 'adj_close', 'volume']).iloc[1: , :]
py_df.tail()
py_df.info()
py_df.shape

py_df_melt = py_df.melt(id_vars = 'date', value_vars = ['open', 'high', 'low', 'close'], value_name = 'prices', var_name = 'price_point')
py_df_melt.info()
py_df_melt.shape

```

```{python}
#| label: features_engineering_with_python

import talib as ta

cci = ta.CCI(py_df.high, py_df.low, py_df.close, timeperiod = 17)
ht = ta.HT_DCPHASE(py_df.close)
aaron = ta.AROONOSC(py_df.high, py_df.low, timeperiod = 17)

ta_df = pd.DataFrame({"date_time": py_df['date'].to_list(), "cci": cci, "aaron":aaron, "ht": ht})
ta_df = ta_df.dropna()
py_df = py_df.loc[ta_df.index, :]   #slicing to get same rows as those in ta_df

ta_df.pop("date_time")
```

